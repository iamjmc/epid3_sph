"0","#create table 1"
"0","library(table1)"
"0","label(mydata$everasthma) <-""Ever had asthma"""
"0","label(mydata$birthsex) <- ""Birth Sex"""
"0","label(mydata$usborn) <-""US Born"""
"0","label(mydata$agegroup) <-""Age Group"""
"0","label(mydata$eversmoker) <-""Smoke cig"""
"0","label(mydata$exercise19) <-""Exercise in past 30 days"""
"0","label(mydata$wallmold) <-""Visible mold in last year"""
"0","label(mydata$newrace6) <- ""Race"""
"0","label(mydata$education) <- ""Education"""
"0","#function for pvalues"
"0","pvalue <- function(x, ...) {"
"0","    # Construct vectors of data y, and groups (strata) g"
"0","    y <- unlist(x)"
"0","    g <- factor(rep(1:length(x), times=sapply(x, length)))"
"0","    if (is.numeric(y)) {"
"0","        # For numeric variables, perform a standard 2-sample t-test"
"0","        p <- t.test(y ~ g)$p.value"
"0","    } else {"
"0","        # For categorical variables, perform a chi-squared test of independence"
"0","        p <- chisq.test(table(y, g))$p.value"
"0","    }"
"0","    # Format the p-value, using an HTML entity for the less-than sign."
"0","    # The initial empty string places the output on the line below the variable label."
"0","    c("""", sub(""<"", ""&lt;"", format.pval(p, digits=3, eps=0.001)))"
"0","}"
"0",""
"0","table1(~usborn + newrace6 + agegroup + birthsex + eversmoker  + wallmold | everasthma, data=mydata, overall=""Total"", extra.col=list(`P-value`=pvalue))"
